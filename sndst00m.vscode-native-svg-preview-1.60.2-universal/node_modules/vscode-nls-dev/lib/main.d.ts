/// <reference types="node" />
import { through } from 'event-stream';
import { ThroughStream as _ThroughStream } from 'through';
import { Map } from './lib';
import File = require('vinyl');
export interface ThroughStream extends _ThroughStream {
    queue(data: File | null): any;
    push(data: File | null): any;
    paused: boolean;
}
export declare function rewriteLocalizeCalls(): ThroughStream;
export declare function createMetaDataFiles(): ThroughStream;
export declare function bundleMetaDataFiles(id: string, outDir: string): ThroughStream;
export interface Language {
    id: string;
    folderName?: string;
    transifexId?: string;
}
export declare function createAdditionalLanguageFiles(languages: Language[], i18nBaseDir: string, baseDir?: string): ThroughStream;
export declare function bundleLanguageFiles(): through.ThroughStream;
export declare function debug(prefix?: string): through.ThroughStream;
/**
 * A stream the creates additional key/value pair files for structured nls files.
 *
 * @param commentSeparator - if provided comments will be joined into one string using
 *  the commentSeparator value. If omitted comments will be includes as a string array.
 */
export declare function createKeyValuePairFile(commentSeparator?: string): through.ThroughStream;
export declare class Line {
    private indent;
    private buffer;
    constructor(indent?: number);
    append(value: string): Line;
    toString(): string;
}
export interface Resource {
    name: string;
    project: string;
}
export interface ParsedXLF {
    messages: Map<string>;
    originalFilePath: string;
    language: string;
}
export declare class XLF {
    project: string;
    private buffer;
    private files;
    constructor(project: string);
    toString(): string;
    addFile(original: string, keys: any[], messages: string[]): void;
    private addStringItem;
    private appendHeader;
    private appendFooter;
    private appendNewLine;
    static parse(xlfString: string): Promise<ParsedXLF[]>;
}
export declare function createXlfFiles(projectName: string, extensionName: string): ThroughStream;
export declare function pushXlfFiles(apiHostname: string, username: string, password: string): ThroughStream;
/**
 * Fetches a Xlf file from transifex. Returns a file stream with paths `${project}/${slug}.xlf`
 *
 * @param apiHostname The hostname, e.g. www.transifex.com
 * @param username The user name, e.g. api
 * @param password The password or access token
 * @param language The language used to pull.
 * @param resources The list of resources to fetch
 */
export declare function pullXlfFiles(apiHostname: string, username: string, password: string, language: Language, resources: Resource[]): NodeJS.ReadableStream;
export declare function prepareJsonFiles(): ThroughStream;
